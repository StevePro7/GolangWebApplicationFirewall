Two endpoints
01/11/2021

01. local
go mod init waftesting
touch main.go
go mod tidy
go run main.go
curl http://localhost:3080
curl http://localhost:3080/test/artists.php

02. docker
Copy + paste Dockerfile
//Right click 05webtestdir:latest | Run interactive

docker build -t stevepro/testwebapi:2.0 .
docker run -p 3080:3080 stevepro/testwebapi:2.0

curl http://localhost:3080
curl http://localhost:3080/test/artists.php

03. kubernetes
minikube start
minikube docker-env
eval $(minikube -p minikube docker-env)
docker build -t stevepro/testwebapi:2.0 .


03b. kind
kind create cluster
docker build -t stevepro/testwebapi:2.0 .
kind load docker-image stevepro/testwebapi:2.0


04. configmap
aa. single file
kubectl create configmap myconfigmap --from-file=modsecdefault.conf

ab. multiple files in single directory
kubectl create configmap myconfigmap --from-file=/home/stevepro/Steven/YAML/configs

05. deployment
kubectl apply -f Deployment.yaml
kubectl apply -f Service.yaml


kubectl get nodes -o wide       172.18.0.2
kubectl get service             31923
curl http://172.18.0.2:31923/
curl http://172.18.0.2:31923/test/artists.php


06. cleanup
kubectl delete -f Service.yaml
kubectl delete -f Deployment.yaml


kubectl create configmap myconfigmap2 --from-file=REQUEST-942-APPLICATION-ATTACK-SQLI.conf


Q.
The Deployment "testwebapi" is invalid: spec.template.spec.containers[0].volumeMounts[1].mountPath: Invalid value: "/etc/config/": must be unique

how do I mount more than 1x core rule set i.e. more than 1x configMap at the same volume mount?

If I mount 1x configMap but stores as symbolic link
e.g.

/etc/config/..2021_11_01_17_31_47.975319551/modsecdefault.conf
/etc/config/..data
/etc/config/modsecdefault.conf

Shell into Pod
cd /etc/config
ls -l
lrwxrwxrwx    1 root     root            25 Nov  1 17:31 modsecdefault.conf -> ..data/modsecdefault.conf


Also, the SecRule is stored as configMap but is now key / value so will "read" correctly from ModSec?
e.g.
{
	"modsecdefault.conf": "
		# -- Rule engine initialization ----------------------------------------------

		# Enable ModSecurity, attaching it to every transaction. Use detection
		# only to start with, because that minimises the chances of post-installation
		# disruption.
		#
		#SecRuleEngine DetectionOnly
		SecRuleEngine On
